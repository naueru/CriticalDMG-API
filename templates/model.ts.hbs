
import {
  DataTypes,
  ModelName,
  SettingName,
  CriticalDMGModel,
  Application,
} from "../declarations";

export class {{properCase name}}Model extends CriticalDMGModel {
  {{#each properties}}
    {{camelCase this.propertyName}}!: {{this.propertyType}};
  {{/each}}
  
  
  public readonly createdAt!: Date;
  public readonly updatedAt!: Date;
}

export default function (app: Application): typeof {{properCase name}}Model {
  const sequelize = app.get(SettingName.SEQUELIZE);
  {{properCase name}}Model.init(
    {
    {{#each properties}}
      {{camelCase this.propertyName}}: {
        type: DataTypes.{{ this.sequelizeType }},
        allowNull: {{ this.propertyIsRequired}},
      },
    {{/each}}

    },
    {
      sequelize,
      tableName: ModelName.{{constantCase name}},
      modelName: ModelName.{{constantCase name}},
      hooks: {
        beforeCount(options: any) {
          options.raw = true;
        },
      },
    }
  );

  {{properCase name}}Model.associate = function (models) {
  };

  return {{properCase name}}Model;
}
